{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/react_practice/practice/src/App.js\";\nimport React, { Component } from \"react\";\n\nfunction Hello() {\n  const element = React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3\n    },\n    __self: this\n  }, \"Hello World\");\n  return {\n    element\n  };\n}\n\nexport default Hello; // import \"./App.css\";\n// const DEFAULT_QUERY = \"redux\";\n// const PATH_BASE = \"https://hn.algolia.com/api/v1\";\n// const PATH_SEARCH = \"/search\";\n// const PARAM_SEARCH = \"query=\";\n// const largeColumn = {\n//   width: \"40%\"\n// };\n// const midColumn = {\n//   width: \"30%\"\n// };\n// const smallColumn = {\n//   width: \"10%\"\n// };\n// const isSearched = searchTerm => item =>\n//   item.title.toLowerCase().includes(searchTerm.toLowerCase());\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       result: null,\n//       searchTerm: DEFAULT_QUERY\n//     };\n//     this.setSearchTopStories = this.setSearchTopStories.bind(this);\n//     this.onSearchChange = this.onSearchChange.bind(this);\n//     this.onDismiss = this.onDismiss.bind(this);\n//   }\n//   setSearchTopStories(result) {\n//     this.setState({ result });\n//   }\n//   componentDidMount() {\n//     const { searchTerm } = this.state;\n//     fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`)\n//       .then(response => response.json())\n//       .then(result => this.setSearchTopStories(result))\n//       .catch(error => error);\n//   }\n//   onSearchChange(event) {\n//     this.setState({ searchTerm: event.target.value });\n//   }\n//   onDismiss(id) {\n//     const isNotId = item => item.objectID !== id;\n//     const updatedList = this.state.list.filter(isNotId);\n//     this.setState({ list: updatedList });\n//   }\n//   render() {\n//     const { searchTerm, result } = this.state;\n//     if (!result) {\n//       return null;\n//     }\n//     return (\n//       <div className=\"page\">\n//         <div className=\"interactions\">\n//           <Search value={searchTerm} onChange={this.onSearchChange}>\n//             Search\n//           </Search>\n//         </div>\n//         <Table\n//           list={result.hits}\n//           pattern={searchTerm}\n//           onDismiss={this.onDismiss}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const Search = ({ value, onChange, children }) => (\n//   <form>\n//     {children} <input type=\"text\" value={value} onChange={onChange} />\n//   </form>\n// );\n// const Table = ({ list, pattern, onDismiss }) => (\n//   <div className=\"table\">\n//     {list.filter(isSearched(pattern)).map(item => (\n//       <div key={item.objectID} className=\"table-row\">\n//         <span style={largeColumn}>\n//           <a href={item.url}>{item.title}</a>\n//         </span>\n//         <span style={midColumn}>{item.author}</span>\n//         <span style={smallColumn}>{item.num_comments}</span>\n//         <span style={smallColumn}>{item.points}</span>\n//         <span style={smallColumn}>\n//           <Button\n//             onClick={() => onDismiss(item.objectID)}\n//             className=\"button-inline\"\n//           >\n//             Dismiss\n//           </Button>\n//         </span>\n//       </div>\n//     ))}\n//   </div>\n// );\n// const Button = ({ onClick, className = \"\", children }) => (\n//   <button onClick={onClick} className={className} type=\"button\">\n//     {children}\n//   </button>\n// );\n// export default App;","map":{"version":3,"sources":["/home/aditya/Desktop/react_practice/practice/src/App.js"],"names":["React","Component","Hello","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,SAASC,KAAT,GAAiB;AACf,QAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AACD,eAAeD,KAAfsourcesContent":["import React, { Component } from \"react\";\nfunction Hello() {\n  const element = <h1>Hello World</h1>;\n  return { element };\n}\nexport default Hello;\n// import \"./App.css\";\n\n// const DEFAULT_QUERY = \"redux\";\n\n// const PATH_BASE = \"https://hn.algolia.com/api/v1\";\n// const PATH_SEARCH = \"/search\";\n// const PARAM_SEARCH = \"query=\";\n\n// const largeColumn = {\n//   width: \"40%\"\n// };\n\n// const midColumn = {\n//   width: \"30%\"\n// };\n\n// const smallColumn = {\n//   width: \"10%\"\n// };\n\n// const isSearched = searchTerm => item =>\n//   item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       result: null,\n//       searchTerm: DEFAULT_QUERY\n//     };\n\n//     this.setSearchTopStories = this.setSearchTopStories.bind(this);\n//     this.onSearchChange = this.onSearchChange.bind(this);\n//     this.onDismiss = this.onDismiss.bind(this);\n//   }\n\n//   setSearchTopStories(result) {\n//     this.setState({ result });\n//   }\n\n//   componentDidMount() {\n//     const { searchTerm } = this.state;\n\n//     fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`)\n//       .then(response => response.json())\n//       .then(result => this.setSearchTopStories(result))\n//       .catch(error => error);\n//   }\n\n//   onSearchChange(event) {\n//     this.setState({ searchTerm: event.target.value });\n//   }\n\n//   onDismiss(id) {\n//     const isNotId = item => item.objectID !== id;\n//     const updatedList = this.state.list.filter(isNotId);\n//     this.setState({ list: updatedList });\n//   }\n\n//   render() {\n//     const { searchTerm, result } = this.state;\n\n//     if (!result) {\n//       return null;\n//     }\n\n//     return (\n//       <div className=\"page\">\n//         <div className=\"interactions\">\n//           <Search value={searchTerm} onChange={this.onSearchChange}>\n//             Search\n//           </Search>\n//         </div>\n//         <Table\n//           list={result.hits}\n//           pattern={searchTerm}\n//           onDismiss={this.onDismiss}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const Search = ({ value, onChange, children }) => (\n//   <form>\n//     {children} <input type=\"text\" value={value} onChange={onChange} />\n//   </form>\n// );\n\n// const Table = ({ list, pattern, onDismiss }) => (\n//   <div className=\"table\">\n//     {list.filter(isSearched(pattern)).map(item => (\n//       <div key={item.objectID} className=\"table-row\">\n//         <span style={largeColumn}>\n//           <a href={item.url}>{item.title}</a>\n//         </span>\n//         <span style={midColumn}>{item.author}</span>\n//         <span style={smallColumn}>{item.num_comments}</span>\n//         <span style={smallColumn}>{item.points}</span>\n//         <span style={smallColumn}>\n//           <Button\n//             onClick={() => onDismiss(item.objectID)}\n//             className=\"button-inline\"\n//           >\n//             Dismiss\n//           </Button>\n//         </span>\n//       </div>\n//     ))}\n//   </div>\n// );\n\n// const Button = ({ onClick, className = \"\", children }) => (\n//   <button onClick={onClick} className={className} type=\"button\">\n//     {children}\n//   </button>\n// );\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}