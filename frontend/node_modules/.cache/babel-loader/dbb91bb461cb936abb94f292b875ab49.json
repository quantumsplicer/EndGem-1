{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/Endgem_Img/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\nimport \"./App.css\";\nconst callApi = new CallApi();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openNotes = e => {\n      var self = this;\n      callApi.getNotes(e.target.id).then(function (res) {\n        console.log(res);\n        self.setState({\n          notes: res\n        });\n      });\n    };\n\n    this.notesList = () => {\n      var self = this;\n      callApi.getNotesList().then(function (res) {\n        self.setState({\n          allnotes: res\n        });\n      });\n    };\n\n    this.submitNote = () => {\n      let _this$state = this.state,\n          newNote = _this$state.newNote,\n          newNoteCourse = _this$state.newNoteCourse,\n          newNoteFile = _this$state.newNoteFile;\n      let form_data = new FormData();\n      form_data.append(\"name\", newNote);\n      form_data.append(\"course\", newNoteCourse);\n      form_data.append(\"no_download\", 0);\n      form_data.append(\"note_file\", newNoteFile);\n      callApi.createNote(form_data).then(() => {\n        console.log(\"sucess\");\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      courses: [],\n      allnotes: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\",\n      newNoteFile: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function (res) {\n      console.log(res);\n      self.setState({\n        courses: res\n      });\n    });\n  }\n\n  async handleSubmit(data) {\n    if (data) {\n      await this.setState({\n        newNote: data.name,\n        newNoteCourse: Number(data.courseId),\n        newNoteFile: data.uploadFile\n      });\n    }\n\n    this.submitNote();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"courses-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.courses.map(item => React.createElement(\"li\", {\n      key: item.id,\n      onClick: this.openNotes,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, item.title))), this.state.notes.map(item => React.createElement(EachNote, {\n      id: item.id,\n      title: item.name,\n      date: item.date_uploaded,\n      nodownload: item.no_download,\n      notefile: item.note_file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      courses: this.state.courses,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), this.state.allnotes.map(item => React.createElement(EachNote, {\n      id: item.id,\n      title: item.name,\n      date: item.date_uploaded,\n      nodownload: item.no_download,\n      notefile: item.note_file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aditya/Desktop/Endgem_Img/frontend/src/App.js"],"names":["React","Component","EachNote","CallApi","CreateNote","callApi","App","constructor","props","openNotes","e","self","getNotes","target","id","then","res","console","log","setState","notes","notesList","getNotesList","allnotes","submitNote","state","newNote","newNoteCourse","newNoteFile","form_data","FormData","append","createNote","catch","err","courses","handleSubmit","bind","componentDidMount","getCourses","data","name","Number","courseId","uploadFile","render","map","item","title","date_uploaded","no_download","note_file"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\nimport \"./App.css\";\nconst callApi = new CallApi();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      allnotes: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\",\n      newNoteFile: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function(res) {\n      console.log(res);\n      self.setState({ courses: res });\n    });\n  }\n  openNotes = e => {\n    var self = this;\n    callApi.getNotes(e.target.id).then(function(res) {\n      console.log(res);\n      self.setState({ notes: res });\n    });\n  };\n  notesList = () => {\n    var self = this;\n    callApi.getNotesList().then(function(res) {\n      self.setState({ allnotes: res });\n    });\n  };\n  submitNote = () => {\n    let { newNote, newNoteCourse, newNoteFile } = this.state;\n\n    let form_data = new FormData();\n    form_data.append(\"name\", newNote);\n    form_data.append(\"course\", newNoteCourse);\n    form_data.append(\"no_download\", 0);\n    form_data.append(\"note_file\", newNoteFile);\n\n    callApi\n      .createNote(form_data)\n      .then(() => {\n        console.log(\"sucess\");\n      })\n      .catch(err => console.log(err));\n  };\n  async handleSubmit(data) {\n    if (data) {\n      await this.setState({\n        newNote: data.name,\n        newNoteCourse: Number(data.courseId),\n        newNoteFile: data.uploadFile\n      });\n    }\n\n    this.submitNote();\n  }\n\n  render() {\n    return (\n      <div>\n        <ul className=\"courses-list\">\n          {this.state.courses.map(item => (\n            <li key={item.id} onClick={this.openNotes} id={item.id}>\n              {item.title}\n            </li>\n          ))}\n        </ul>\n        {this.state.notes.map(item => (\n          <EachNote\n            id={item.id}\n            title={item.name}\n            date={item.date_uploaded}\n            nodownload={item.no_download}\n            notefile={item.note_file}\n          />\n        ))}\n        <div>\n          <CreateNote\n            courses={this.state.courses}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n        {this.state.allnotes.map(item => (\n          <EachNote\n            id={item.id}\n            title={item.name}\n            date={item.date_uploaded}\n            nodownload={item.no_download}\n            notefile={item.note_file}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}