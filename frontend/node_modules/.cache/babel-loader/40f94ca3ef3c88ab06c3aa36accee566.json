{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/react_practice/practice/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nconst DEFAULT_QUERY = \"redux\";\nconst PATH_BASE = \"https://hn.algolia.com/api/v1\";\nconst PATH_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\nconst largeColumn = {\n  width: \"40%\"\n};\nconst midColumn = {\n  width: \"30%\"\n};\nconst smallColumn = {\n  width: \"10%\"\n};\n\nconst isSearched = searchTerm => item => item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({\n      result\n    });\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    fetch(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm)).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n\n    const updatedList = this.state.list.filter(isNotId);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchTerm = _this$state.searchTerm,\n          result = _this$state.result;\n\n    if (!result) {\n      return null;\n    }\n\n    console.log(this.state.result);\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(SearchA, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, Aditya)), React.createElement(Table, {\n      list: result.hits,\n      pattern: searchTerm,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Aditya = \"Hello World Just Search\";\n\nconst SearchA = ({\n  value,\n  onChange,\n  children\n}) => React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, children, \" \", React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}));\n\nconst Table = ({\n  list,\n  pattern,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, list.filter(isSearched(pattern)).map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: largeColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: midColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: smallColumn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = \"\",\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/home/aditya/Desktop/react_practice/practice/src/App.js"],"names":["React","Component","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","largeColumn","width","midColumn","smallColumn","isSearched","searchTerm","item","title","toLowerCase","includes","App","constructor","props","state","result","setSearchTopStories","bind","onSearchChange","onDismiss","setState","componentDidMount","fetch","then","response","json","catch","error","event","target","value","id","isNotId","objectID","updatedList","list","filter","render","console","log","Aditya","hits","SearchA","onChange","children","Table","pattern","map","url","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nconst DEFAULT_QUERY = \"redux\";\n\nconst PATH_BASE = \"https://hn.algolia.com/api/v1\";\nconst PATH_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\n\nconst largeColumn = {\n  width: \"40%\"\n};\n\nconst midColumn = {\n  width: \"30%\"\n};\n\nconst smallColumn = {\n  width: \"10%\"\n};\n\nconst isSearched = searchTerm => item =>\n  item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({ result });\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n    const updatedList = this.state.list.filter(isNotId);\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    const { searchTerm, result } = this.state;\n\n    if (!result) {\n      return null;\n    }\n    console.log(this.state.result);\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <SearchA value={searchTerm} onChange={this.onSearchChange}>\n            {Aditya}\n          </SearchA>\n        </div>\n        <Table\n          list={result.hits}\n          pattern={searchTerm}\n          onDismiss={this.onDismiss}\n        />\n      </div>\n    );\n  }\n}\nconst Aditya = \"Hello World Just Search\";\nconst SearchA = ({ value, onChange, children }) => (\n  <form>\n    {children} <input type=\"text\" value={value} onChange={onChange} />\n  </form>\n);\n\nconst Table = ({ list, pattern, onDismiss }) => (\n  <div className=\"table\">\n    {list.filter(isSearched(pattern)).map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={midColumn}>{item.author}</span>\n        <span style={smallColumn}>{item.num_comments}</span>\n        <span style={smallColumn}>{item.points}</span>\n        <span style={smallColumn}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = \"\", children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}