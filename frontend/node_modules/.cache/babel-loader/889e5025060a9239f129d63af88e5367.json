{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/Endgem_Img/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\nconst callApi = new CallApi();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openNotes = e => {\n      var self = this;\n      callApi.getNotes(e.target.id).then(function (res) {\n        console.log(res);\n        self.setState({\n          notes: res\n        });\n      });\n    };\n\n    this.submitNote = () => {\n      console.log(this.state.newNote);\n      let _this$state = this.state,\n          newNote = _this$state.newNote,\n          newNoteCourse = _this$state.newNoteCourse;\n      let data = {\n        course: newNoteCourse,\n        name: newNote,\n        no_download: 0\n      };\n      callApi.createNote(data).then(() => {\n        console.log(\"sucess\");\n      }).catch(err => console.log(err));\n    };\n\n    this.handleSubmit = data => {\n      if (data) {\n        this.setState({\n          newNote: data.name,\n          newNoteCourse: this.state.courses.find(item => item.id == Number(data.courseId))\n        });\n      }\n\n      this.submitNote();\n    };\n\n    this.state = {\n      courses: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function (res) {\n      console.log(res);\n      self.setState({\n        courses: res\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(EachNote, {\n      title: \"PDF Title\",\n      date: \"6/11/2019\",\n      nodownload: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.courses.map(item => React.createElement(\"li\", {\n      key: item.id,\n      onClick: this.openNotes,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, item.title))), this.state.notes.map(item => React.createElement(EachNote, {\n      title: item.name,\n      date: item.date_uploaded,\n      nodownload: item.no_download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      courses: this.state.courses,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aditya/Desktop/Endgem_Img/frontend/src/App.js"],"names":["React","Component","EachNote","CallApi","CreateNote","callApi","App","constructor","props","openNotes","e","self","getNotes","target","id","then","res","console","log","setState","notes","submitNote","state","newNote","newNoteCourse","data","course","name","no_download","createNote","catch","err","handleSubmit","courses","find","item","Number","courseId","componentDidMount","getCourses","render","map","title","date_uploaded"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\n\nconst callApi = new CallApi();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\"\n    };\n  }\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function(res) {\n      console.log(res);\n      self.setState({ courses: res });\n    });\n  }\n  openNotes = e => {\n    var self = this;\n    callApi.getNotes(e.target.id).then(function(res) {\n      console.log(res);\n      self.setState({ notes: res });\n    });\n  };\n  submitNote = () => {\n    console.log(this.state.newNote);\n    let { newNote, newNoteCourse } = this.state;\n    let data = {\n      course: newNoteCourse,\n      name: newNote,\n      no_download: 0\n    };\n    callApi\n      .createNote(data)\n      .then(() => {\n        console.log(\"sucess\");\n      })\n      .catch(err => console.log(err));\n  };\n  handleSubmit = data => {\n    if (data) {\n      this.setState({\n        newNote: data.name,\n        newNoteCourse: this.state.courses.find(\n          item => item.id == Number(data.courseId)\n        )\n      });\n    }\n    this.submitNote();\n  };\n\n  render() {\n    return (\n      <div>\n        <EachNote title=\"PDF Title\" date=\"6/11/2019\" nodownload=\"14\" />\n        <ul>\n          {this.state.courses.map(item => (\n            <li key={item.id} onClick={this.openNotes} id={item.id}>\n              {item.title}\n            </li>\n          ))}\n        </ul>\n        {this.state.notes.map(item => (\n          <EachNote\n            title={item.name}\n            date={item.date_uploaded}\n            nodownload={item.no_download}\n          />\n        ))}\n        <div>\n          <CreateNote\n            courses={this.state.courses}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}