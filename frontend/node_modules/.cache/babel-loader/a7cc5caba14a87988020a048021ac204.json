{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/Endgem_Img/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\nconst callApi = new CallApi();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openNotes = e => {\n      var self = this;\n      callApi.getNotes(e.target.id).then(function (res) {\n        console.log(res);\n        self.setState({\n          notes: res\n        });\n      });\n    };\n\n    this.submitNote = () => {\n      let _this$state = this.state,\n          newNote = _this$state.newNote,\n          newNoteCourse = _this$state.newNoteCourse;\n      let data = {\n        name: newNote,\n        course: newNoteCourse,\n        no_download: 0\n      };\n      console.log(data);\n      callApi.createNote({\n        name: newNote,\n        course: newNoteCourse,\n        no_download: 0\n      }).then(() => {\n        console.log(\"sucess\");\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      courses: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function (res) {\n      console.log(res);\n      self.setState({\n        courses: res\n      });\n    });\n  }\n\n  async handleSubmit(data) {\n    if (data) {\n      await this.setState({\n        newNote: data.name,\n        newNoteCourse: Number(data.courseId)\n      });\n    }\n\n    this.submitNote();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(EachNote, {\n      title: \"PDF Title\",\n      date: \"6/11/2019\",\n      nodownload: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.courses.map(item => React.createElement(\"li\", {\n      key: item.id,\n      onClick: this.openNotes,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, item.title))), this.state.notes.map(item => React.createElement(EachNote, {\n      title: item.name,\n      date: item.date_uploaded,\n      nodownload: item.no_download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      courses: this.state.courses,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aditya/Desktop/Endgem_Img/frontend/src/App.js"],"names":["React","Component","EachNote","CallApi","CreateNote","callApi","App","constructor","props","openNotes","e","self","getNotes","target","id","then","res","console","log","setState","notes","submitNote","state","newNote","newNoteCourse","data","name","course","no_download","createNote","catch","err","courses","handleSubmit","bind","componentDidMount","getCourses","Number","courseId","render","map","item","title","date_uploaded"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport EachNote from \"./components/eachNote/note\";\nimport CallApi from \"./api\";\nimport CreateNote from \"./createNote.js\";\n\nconst callApi = new CallApi();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      notes: [],\n      newNote: \"\",\n      newNoteCourse: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    var self = this;\n    callApi.getCourses().then(function(res) {\n      console.log(res);\n      self.setState({ courses: res });\n    });\n  }\n  openNotes = e => {\n    var self = this;\n    callApi.getNotes(e.target.id).then(function(res) {\n      console.log(res);\n      self.setState({ notes: res });\n    });\n  };\n  submitNote = () => {\n    let { newNote, newNoteCourse } = this.state;\n    let data = {\n      name: newNote,\n      course: newNoteCourse,\n      no_download: 0\n    };\n    console.log(data);\n    callApi\n      .createNote({\n        name: newNote,\n        course: newNoteCourse,\n        no_download: 0\n      })\n      .then(() => {\n        console.log(\"sucess\");\n      })\n      .catch(err => console.log(err));\n  };\n  async handleSubmit(data) {\n    if (data) {\n      await this.setState({\n        newNote: data.name,\n        newNoteCourse: Number(data.courseId)\n      });\n    }\n\n    this.submitNote();\n  }\n\n  render() {\n    return (\n      <div>\n        <EachNote title=\"PDF Title\" date=\"6/11/2019\" nodownload=\"14\" />\n        <ul>\n          {this.state.courses.map(item => (\n            <li key={item.id} onClick={this.openNotes} id={item.id}>\n              {item.title}\n            </li>\n          ))}\n        </ul>\n        {this.state.notes.map(item => (\n          <EachNote\n            title={item.name}\n            date={item.date_uploaded}\n            nodownload={item.no_download}\n          />\n        ))}\n        <div>\n          <CreateNote\n            courses={this.state.courses}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}